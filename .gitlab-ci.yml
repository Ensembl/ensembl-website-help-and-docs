stages:
  - build
  - deploy

variables:
  DOCKER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}
  DOCKER_TLS_CERTDIR: ""
  PUBLIC_PATH: /api/docs

.build:
  stage: build
  image: docker
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t ${DOCKER_IMAGE} --build-arg PUBLIC_PATH=${PUBLIC_PATH} --no-cache .
    - docker push ${DOCKER_IMAGE}
    - docker rmi ${DOCKER_IMAGE}
    - docker logout $CI_REGISTRY

.deploy:
  stage: deploy
  image: dockerhub.ebi.ac.uk/ensembl-web/deploy-tools:latest
  before_script:
    - kubectl config use-context ${AGENT}
    - kubectl config set-context --current --namespace=${NS}
  script:
    - git clone https://gitlab.ebi.ac.uk/ensembl-web/ensembl-k8s-manifests.git
    - git -C ensembl-k8s-manifests/ checkout k8s123-migration
    - cd ensembl-k8s-manifests/help-and-docs
    - kustomize edit set image DOCKER_IMAGE=${DOCKER_IMAGE}
    - kubectl apply -k ./

.deploy-template: &deploy-rules
  rules:
    - if: '$CI_DEPLOY_FREEZE == null && $CI_COMMIT_BRANCH == "main"'
      when: always

build:
  extends: .build

# Live (production) deployment: beta.ensembl.org
Live:
  extends: .deploy
  <<: *deploy-rules
  environment:
    name: production
  variables:
    AGENT: ${FALLBACK_AGENT}
    NS: ${FALLBACK_NS}

# Fallback deployment for the live (production) deployment: beta.ensembl.org (Hinxton)
LiveFallback:
  extends: .deploy
  <<: *deploy-rules
  environment:
    name: fallback
  variables:
    AGENT: ${FALLBACK_AGENT}
    NS: ${FALLBACK_NS}

# Staging deployment: staging-2020.ensembl.org
Staging:
  extends: .deploy
  <<: *deploy-rules
  environment:
    name: staging
  variables: 
    AGENT: ${FALLBACK_AGENT}
    NS: ${FALLBACK_NS}

# Internal deployment: internal-2020.ensembl.org
Internal:
  extends: .deploy
  <<: *deploy-rules
  environment:
    name: internal
  variables:
    AGENT: ${FALLBACK_AGENT}
    NS: ${FALLBACK_NS}

# Development deployment: dev-2020.ensembl.org
Dev:
  extends: .deploy
  <<: *deploy-rules
  environment:
    name: development
  variables:
    AGENT: ${FALLBACK_AGENT}
    NS: ${FALLBACK_NS}
